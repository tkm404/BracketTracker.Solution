// <auto-generated />
using BracketTracker.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BracketTracker.Migrations
{
    [DbContext(typeof(BracketTrackerContext))]
    [Migration("20230525212707_WinnersAndLosersTables")]
    partial class WinnersAndLosersTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BracketTracker.Models.Loser", b =>
                {
                    b.Property<int>("LoserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("LoserId");

                    b.HasIndex("TeamId");

                    b.ToTable("Losers");
                });

            modelBuilder.Entity("BracketTracker.Models.Round", b =>
                {
                    b.Property<int>("RoundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Result")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("RoundId");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("BracketTracker.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("BracketTracker.Models.TeamRound", b =>
                {
                    b.Property<int>("TeamRoundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Outcome")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("RoundId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("TeamRoundId");

                    b.HasIndex("RoundId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamRounds");
                });

            modelBuilder.Entity("BracketTracker.Models.Winner", b =>
                {
                    b.Property<int>("WinnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("WinnerId");

                    b.HasIndex("TeamId");

                    b.ToTable("Winners");
                });

            modelBuilder.Entity("BracketTracker.Models.Loser", b =>
                {
                    b.HasOne("BracketTracker.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("BracketTracker.Models.TeamRound", b =>
                {
                    b.HasOne("BracketTracker.Models.Round", "Round")
                        .WithMany("JoinEntities")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BracketTracker.Models.Team", "Team")
                        .WithMany("JoinEntities")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Round");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("BracketTracker.Models.Winner", b =>
                {
                    b.HasOne("BracketTracker.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("BracketTracker.Models.Round", b =>
                {
                    b.Navigation("JoinEntities");
                });

            modelBuilder.Entity("BracketTracker.Models.Team", b =>
                {
                    b.Navigation("JoinEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
